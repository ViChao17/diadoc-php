syntax="proto3";
import "Documents/ReceiptStatus.proto";

package Diadoc.Proto.Documents.BilateralDocument;

message TrustConnectionRequestMetadata {
	 BilateralDocumentStatus TrustConnectionRequestStatus = 1;
}

message BasicDocumentMetadata {
	 BilateralDocumentStatus DocumentStatus = 1;
	 string Total = 2;
	 string Vat = 3;
	 string Grounds = 4;
	 ReceiptStatus ReceiptStatus = 5;
}

message PriceListMetadata {
	 BilateralDocumentStatus DocumentStatus = 1;
	 string PriceListEffectiveDate = 2;
	 string ContractDocumentDate = 3;
	 string ContractDocumentNumber = 4;
	 ReceiptStatus ReceiptStatus = 5;
}

message ContractMetadata {
	 BilateralDocumentStatus DocumentStatus = 1;
	 string ContractPrice = 2;
	 string ContractType = 3;
	 ReceiptStatus ReceiptStatus = 4;
}

message SupplementaryAgreementMetadata {
	 BilateralDocumentStatus DocumentStatus = 1;
	 string Total = 2;
	 string ContractType = 3;
	 string ContractNumber = 4;
	 string ContractDate = 5;
	 ReceiptStatus ReceiptStatus = 6;
}

message BilateralDocumentMetadata {
	 BilateralDocumentStatus DocumentStatus = 1;
	 ReceiptStatus ReceiptStatus = 2;
}

enum BilateralDocumentStatus {
	UnknownBilateralDocumentStatus = 0;	// Reserved status to report to legacy clients for newly introduced statuses
	OutboundWaitingForRecipientSignature = 1;
	OutboundWithRecipientSignature = 2;
	OutboundRecipientSignatureRequestRejected = 3;
	OutboundWaitingForSenderSignature = 10;
	OutboundInvalidSenderSignature = 11;
	InboundWaitingForRecipientSignature = 4;
	InboundWithRecipientSignature = 5;
	InboundRecipientSignatureRequestRejected = 6;
	InboundInvalidRecipientSignature = 12;
	InternalWaitingForRecipientSignature = 7;
	InternalWithRecipientSignature = 8;
	InternalRecipientSignatureRequestRejected = 9;
	InternalWaitingForSenderSignature = 13;
	InternalInvalidSenderSignature = 14;
	InternalInvalidRecipientSignature = 15;
}
