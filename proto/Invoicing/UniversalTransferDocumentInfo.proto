syntax="proto3";
import "Invoicing/InvoiceInfo.proto";
import "Invoicing/ExtendedSigner.proto";
import "Invoicing/ExtendedOrganizationInfo.proto";

package Diadoc.Proto.Invoicing;

message UniversalTransferDocumentSellerTitleInfo {
	 FunctionType Function = 1;  // Функция документа // Функция
	 string DocumentName = 2;    // Наименование первичного документа, определенное организацией // НаимДокОпр
	 string DocumentDate  = 3;   // дата УПД // ДатаСчФ
	 string DocumentNumber  = 4; // номер УПД // НомерСчФ

	 Organizations.ExtendedOrganizationInfo Seller = 5;    // продавец // СвПрод
	 Organizations.ExtendedOrganizationInfo Buyer = 6;     // покупатель //СвПокуп
	 Shipper Shipper = 7;                                  // грузоотправитель //ГрузОт
	 Organizations.ExtendedOrganizationInfo Consignee = 8; // грузополучатель //ГрузПолуч
	repeated Signers.ExtendedSigner Signers = 9;        // подписант // Подписант
	repeated PaymentDocumentInfo PaymentDocuments = 10; // платежно-расчетные документы // СвПРД
	 InvoiceTable InvoiceTable = 11;            // Сведения таблицы счет фактуры // ТаблСчФакт
	 string Currency = 12;                      // валюта (код) // КодОКВ
	 string CurrencyRate = 13;                  // Курс валюты // КурсВал
	 string RevisionDate = 14;                  // дата ИСФ (обязательно при формировании UniversalTransferDocumentSellerTitleRevision) // ДатаИспрСчФ
	 string RevisionNumber = 15;                // номер ИСФ (обязательно при формировании UniversalTransferDocumentSellerTitleRevision) // НомИспрСчФ
	 AdditionalInfoId AdditionalInfoId = 16;    // информационное поле документа // ИнфПолФХЖ1
	 TransferInfo TransferInfo = 17;            // Сведения о передаче (сдаче) // СвПер
	 string DocumentCreator = 18;               // Составитель файла обмена счета-фактуры (информации продавца) // НаимЭконСубСост
	 string DocumentCreatorBase = 19;           // Основание, по которому экономический субъект является составителем файла обмена счета-фактуры //ОснДоверОргСост
	 string GovermentContractInfo = 20;         // ИдГосКон
}

enum FunctionType {
	Invoice = 0;         // СЧФ
	Basic = 1;           // ДОП
	InvoiceAndBasic = 2; // СЧФДОП
}

message Shipper {
	 bool SameAsSeller = 1; // совпадает с продавцом // ОнЖе
	 Organizations.ExtendedOrganizationInfo OrgInfo = 2; // реквизиты организации // ГрузОтпр
}

message InvoiceTable {
	repeated ExtendedInvoiceItem Items = 1;   // информация о товарах // СведТов
	 string TotalWithVatExcluded = 2; // Сумма без учета налога // СтТовБезНДСВсего
	 string Vat = 3;                  // Сумма налога // СумНалВсего
	 string Total = 4;                // Сумма всего // СтТовУчНалВсего
	 string TotalNet = 5;             // Нетто всего // НеттоВс}
}

message ExtendedInvoiceItem {
	 string Product = 1;  // наименование товара // НаимТов
	 string Unit = 2;     // единицы измерения товара (код) // ОКЕИ_Тов
	 string UnitName = 3; // наименование единицы измерения товара. Пользователь заполняет, если ОКЕИ_Тов=’0000’               // НаимЕдИзм
	 string Quantity = 4; // количество единиц товара // КолТов
	 string Price = 5;    // цена за единицу товара // ЦенаТов
	 string Excise = 6;   // акциз // СумАкциз
	 TaxRate TaxRate = 7; // ставка налога // НалСт
	 string SubtotalWithVatExcluded = 8; // сумма без учета налога // СтТовБезНДС
	 string Vat = 9;       // сумма налога // СумНал
	 string Subtotal = 10; // сумма всего // СтТовУчНал
	repeated CustomsDeclaration CustomsDeclarations = 11; // номера таможенных деклараций // СвТД
	 ItemMark ItemMark = 12;             // Признак товар-работа-услуга // ПрТовРаб
	 string AdditionalProperty = 13;     // Дополнительная информация о признаке //ДопПризн
	 string ItemVendorCode = 14;         // Характеристика/код/артикул/сорт товара // КодТов
	 string ItemToRelease = 15;          // Количество надлежит отпустить // НадлОтп
	 string ItemAccountDebit = 16;       // Корреспондирующие счета: дебет // КорСчДебет
	 string ItemAccountCredit = 17;      // Корреспондирующие счета: кредит // КорСчКредит
	repeated AdditionalInfo AdditionalInfo = 18; // информационное поле документа // ИнфПолФХЖ2
}

enum ItemMark {
	NotSpecified = 0;   // не указано
	Property = 1;       // имущество
	Job = 2;            // работа
	Service = 3;        // услуга
	PropertyRights = 4; // имущественные права
	Other = 5;          // иное
}

message TransferInfo {
	 string OperationInfo = 1;               // Содержание операции // СодОпер
	 string OperationType = 2;               // Вид операции // ВидОпер
	 string TransferDate = 3;                // Дата отгрузки // ДатаПер
	repeated TransferBase TransferBase = 4;          // Основание отгрузки //ОснПер
	 string TransferTextInfo = 5;            // Сведения о транспортировке и грузе // СвТранГруз
	repeated Waybill Waybill = 6;                    // Транспортная накладная //ТранНакл
	 Organizations.ExtendedOrganizationInfo Carrier = 7; // Перевозчик // Перевозчик
	 Employee Employee = 8;                  // Работник организации продавца //РабОргПрод
	 OtherIssuer  OtherIssuer = 9;           // Иное лицо //ИнЛицо
	 string CreatedThingTransferDate = 10;   // Дата передачи вещи, изготовленной по договору //ДатаПерВещ
	 string CreatedThingInfo = 11;           // Сведения о передаче, изготовленной по договору //СвПерВещ
	 AdditionalInfoId AdditionalInfoId = 12; // Информационное поле документа // ИнфПолФХЖ3
}

message TransferBase {
	 string BaseDocumentName = 1;   // Наименование документа-основания отгрузки //НаимОсн
	 string BaseDocumentNumber = 2; // Номер документа-основания отгрузки //НомОсн
	 string BaseDocumentDate = 3;   // Дата документа-основания отгрузки //ДатаОсн
	 string BaseDocumentInfo = 4;   // Дополнительные сведения документа-основания отгрузки //ДопСвОсн
}

message  Waybill {
	  string TransferDocumentNumber = 1; // Номер транспортной накладной // НомерТранНакл
	  string TransferDocumentDate = 2;   // Дата траспортной накладной // ДатаТранНакл
}

message Employee {
	 string EmployeePosition = 1;   // Должность // Должность
	 string EmployeeInfo = 2;       // Иные сведения, идентифицирующие физическое лицо // ИныеСвед
	 string EmployeeBase = 3;       // Основание полномочий предстваителя // ОснПолн
	 string TransferSurname = 4;    // Фамилия //Фамилия
	 string TransferFirstName = 5;  // Имя //Имя
	 string TransferPatronymic = 6; // Отчество //Отчество
}

message OtherIssuer {
	 string TransferEmployeePosition = 1; // Должность предстваителя организации // Должность //если заполнено 0 формируется структура «ПредОргПер», если не заполнено – «ФЛПер»
	 string TransferEmployeeInfo = 2;     // Иные сведения, идентифицирующие физическое лицо // ИныеСвед
	 string TransferOrganizationName = 3; //Наименование организации, которой доверена передача // НаимОргПер
	 string TransferOrganizationBase = 4; // Основание, по которому организации доверена передача // ОснДоверОргПер
	 string TransferEmployeeBase = 5;     //Основание полномочий предстваителя // ОснПолнПредПер (ОснДоверФЛ)
	 string TransferSurname = 6;    //Фамилия //Фамилия
	 string TransferFirstName = 7;  //Имя //Имя
	 string TransferPatronymic = 8; //Отчество //Отчество
}

message AdditionalInfoId {
	 string InfoFileId = 1;             // Идентификатор файла информационного поля // ИдФайлИнфПол
	repeated AdditionalInfo AdditionalInfo = 2; //Текстовая информация // ТекстИнф
}

message UniversalTransferDocumentBuyerTitleInfo {
	 string DocumentCreator = 1; // НаимЭконСубСост - Наименование экономического субъекта - составителя файла обмена информации покупателя
	 string DocumentCreatorBase = 2; // ОснДоверОргСост - Основание, по которому экономический субъект является составителем файла обмена информации покупателя
	 string OperationCode = 3; // ВидОперации - ВидОперации
	 string OperationContent = 4; // СодОпер - Содержание операции
	 string AcceptanceDate = 5; // ДатаПрин - Дата принятия товаров (результатов выполненных работ), имущественных прав (подтверждения факта оказания услуг)
	 Employee Employee = 6; // РабОргПок - работник организации покупателя
	 OtherIssuer OtherIssuer = 7; // ИнЛицо - Иное Лицо
	 AdditionalInfoId AdditionalInfoId = 8; // ИнфПолФХЖ4
	repeated Signers.ExtendedSigner Signers = 9; // Подписант
}